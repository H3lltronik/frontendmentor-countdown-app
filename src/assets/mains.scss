@import url("https://fonts.googleapis.com/css2?family=Red+Hat+Text:wght@400;700&display=swap");

body {
  margin: 0;
  font-size: 14px;
  font-weight: 700;
  overflow: hidden;
  color: hsl(237, 18%, 59%);
  width: 100vw;
  height: 100vh;
  font-family: "Red Hat Text", sans-serif;
  background-image: linear-gradient(to top, #241c2b, #1e1e28);
}

a {
  color: inherit;
  text-decoration: inherit;
  transition: color 0.2s ease-in-out;
  &:hover {
    color: hsl(345, 95%, 68%);
  }
}

%center {
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.app {
  display: flex;
  text-align: center;
  position: relative;
  flex-direction: column;
  width: 100vw;
  height: 100vh;
  &__contents {
    flex: 1;
    z-index: 2;
    display: flex;
    overflow: hidden;
    position: relative;
    align-items: center;
    justify-content: center;
    @media (max-width: 375px) {
      align-items: flex-start;
    }
  }
  &__footer {
    z-index: 3;
    overflow: hidden;
    max-width: 100vw;
    position: absolute;
    bottom: 0%;
    left: 0%;
    img {
      width: 100%;
      height: auto;
      object-fit: cover;
      margin-bottom: -5px;
    }
    &_wrapper {
      position: relative;
    }
    &_image {
      width: 100vw;
      min-width: 1440px;
    }
    &_icons {
      display: flex;
      font-size: 40px;
      @extend %center;
      flex-wrap: nowrap;
      position: absolute;
      & :nth-child(2n + 1) {
        margin: 0 10px;
      }
      @media (max-width: 375px) {
        font-size: 30px;
        & :nth-child(2n + 1) {
          margin: 0 5px;
        }
      }
    }
  }

  &__launcher {
    z-index: 3;
    position: relative;
    transform: translateY(-50%);
    @media (max-width: 375px) {
      transform: translateY(0%);
    }
    &__numbers {
      gap: 50px;
      display: flex;
      margin: 0 auto;
      justify-content: center;
      @media (max-width: 750px) {
        gap: 50px 10px;
        width: 95vw;
      }
      @media (max-width: 375px) {
        flex-wrap: wrap;
      }
    }
  }
  &_title {
    color: white;
    letter-spacing: 5px;
    margin-bottom: 100px;
    @media (max-width: 750px) {
      font-size: 5vw;
    }
    @media (max-width: 375px) {
      font-size: 20px;
      margin-bottom: 50px;
    }
  }
}

// -----------------------------------------------------------------------------------------------------------------------------------------------

@function stars-generator($width, $height, $amount, $color) {
  $boxShadowStyles: "#{random($width)}px #{random($width)}px #{$color}";
  @for $star from 1 to $amount {
    // Generating random numbers between 1 and parameter
    $randStarXPos: random($width * 2) - ($width);
    $randStarYPos: random($height * 2) - ($height);
    // We append the last generated code with #{$boxShadowStyles}
    $boxShadowStyles: "#{$boxShadowStyles}, #{$randStarXPos}px #{$randStarYPos}px #{$color}";
  }
  // Unquote so we can use as a CSS value
  @return unquote($boxShadowStyles);
}

@mixin stars-abstraction {
  @extend %center;
  position: absolute;
  border-radius: 100%;
  box-shadow: stars-generator(1920, 1080, 100, white);

  animation-name: starsanim;
  animation-fill-mode: none;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
}

@keyframes starsanim {
  0% {
    transform: translate(0, 0) rotate(0deg);
  }
  100% {
    transform: translate(0, -1000px) rotate(180deg);
  }
}

.stars-1 {
  width: 3px;
  height: 3px;
  animation-duration: 100s;
  @include stars-abstraction;
}
.stars-2 {
  width: 1px;
  height: 1px;
  animation-duration: 300s;
  @include stars-abstraction;
}
.stars-3 {
  width: 5px;
  height: 5px;
  animation-duration: 500s;
  @include stars-abstraction;
}
.stars-layer {
  width: 3840px;
  height: 2160px;
  z-index: -10;
  position: absolute;

  @extend %center;
}

@mixin shooting-star {
  position: absolute;
  width: 25px;
  height: 2px;
  background-color: white;
  &_container {
    position: absolute;
    top: 10%; right: 30%;
    transform: rotate(135deg);
  }
  animation: shooting;
  animation-fill-mode: forwards;
  animation-iteration-count: infinite;
}

@for $i from 2 to 10 {
    .shooting-star-#{$i} {
        @include shooting-star;
        animation-duration: 20s;
        animation-delay: #{random(50)}s;
        @media (max-width: 375px) {
            animation-duration: 5s;
        }
        &_container {
            transform: rotate(135deg);
            top: 0%; 
            right: unquote("#{random(70)-20}%");
        }
    }
}

.shooting-star-1 {
    @include shooting-star;
    animation-duration: 20s;
    @media (max-width: 375px) {
        animation-duration: 5s;
    }
    &_container {
        @extend %center;
        transform: rotate(135deg);
    }
}

@keyframes shooting {
  0% {
    width: 0;
  }
  0.1% {
    width: 25px;
  }
  10% {
    transform: translateX(2000px);
  }
  100% {
    transform: translateX(2000px);
  }
}